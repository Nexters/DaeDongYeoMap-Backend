# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

"""Emoji를 포함한 유저데이터를 포함하여, mongodb에 저장시킬 장소 데이터"""
type Spot {
  """Spot id"""
  _id: String!

  """kakao place id"""
  placeId: String!

  """list of emoji ids"""
  emojis: [String!]!
  place_name: String!
  category_name: String
  category_group_code: String
  category_group_name: String
  phone: String
  address_name: String
  road_address_name: String
  place_url: String
  distance: String
  x: Float
  y: Float
}

"""카카오 지도 api로 부터 받은 위치 정보로 TTL 300 캐싱됩니다."""
type Place {
  """kakao place id"""
  id: String!
  place_name: String!
  category_name: String
  category_group_code: String
  category_group_name: String
  phone: String
  address_name: String
  road_address_name: String
  place_url: String
  distance: String
  x: Float
  y: Float
}

type DeleteSpotDto {
  ok: Int!
  n: Int!
  deletedCount: Int!
}

"""Spot들을 순서대로 저장하고 있는 데이터 코스 정보"""
type Course {
  """Course id"""
  _id: String!

  """스팟들의 ID를 담고 있는 리스트(순서 포함)"""
  spots: [Spot!]!
  title: String!
  isPrivate: String!
}

type Query {
  """(For Debugging) mongoDB에 저장된 모든 스팟 반환"""
  getAllSpots: [Spot!]!

  """검색 키워드와 매칭되는 스팟들을 반환"""
  getSpotsByKeyword(keyword: String!): [Spot!]!

  """(For Debugging) 카카오 place id로 스팟 검색"""
  spot(placeId: String!): Spot!

  """
  키워드로 위치 정보를 확인합니다. 
  내부적으로 카카오 API를 요청합니다.
  """
  getPlacesByKeyword(filters: KeywordSearchDto!): [Place!]!
  getPlaceFromCache(placeId: String!): Place!
}

"""SortType은 정확도(accuracy)가 기본이며, 거리순(distance) 정렬을 원할 경우 x,y는 필수 입니다."""
input KeywordSearchDto {
  query: String!
  category_group_code: String
  x: Float
  y: Float
  radius: Int
  rect: String
  page: Int
  size: Int
  sort: SortType
}

enum SortType {
  distance
  accuracy
}

type Mutation {
  """
  스팟을 생성/업데이트합니다.
  이미 기존에 스팟이 생성되었다면 자동으로 update처리 됩니다.
  """
  createOrUpdateSpot(createSpotInput: CreateSpotInput!): Spot!

  """(For Debugging) 스팟 하나 삭제"""
  removeSpot(id: String!): DeleteSpotDto!

  """코스를 생성합니다. 이때 스팟의 순서는 전달된 스팟 아이디의 index로 처리됩니다."""
  createCourse(createCourseInput: CreateCourseInput!): Course!
}

input CreateSpotInput {
  """카카오 Place id"""
  placeId: String!
  place_name: String!
  x: Float!
  y: Float!

  """이모지 id"""
  emoji: String!
  category_name: String
  category_group_code: String
  category_group_name: String
  phone: String
  address_name: String
  road_address_name: String
  place_url: String
  distance: String
}

input CreateCourseInput {
  """스팟들의 ID를 담고 있는 리스트(순서 포함)"""
  spots: [String!]!
  title: String!
  isPrivate: String!
}
